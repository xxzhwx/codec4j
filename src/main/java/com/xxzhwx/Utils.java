package com.xxzhwx;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.StringJoiner;

public final class Utils {
    public static void addAutoGeneratedNote(List<String> lines) {
        lines.add("");
        lines.add("/**");
        lines.add(" * @brief This file is Auto-Generated. please DON'T modify it EVEN if ");
        lines.add(" *        you know what you are doing.");
        lines.add(" * ");
        lines.add(" *        created time: " + new Date());
        lines.add(" */");
    }

    public static List<String> listClassNames(String packageName, String path) {
        List<String> classNames = new ArrayList<>();
        scans(packageName, path, classNames);
        return classNames;
    }

    private static void scans(String packageName, String path, List<String> classNames) {
        File file = new File(path);
        File[] files = file.listFiles();
        if (files == null) {
            return;
        }

        for (File f : files) {
            if (f.isFile()) {
                String className = new StringJoiner(".").add(packageName).add(f.getName().split("\\.")[0]).toString();
                classNames.add(className);
            } else if (f.isDirectory()) {
                String pgName = new StringJoiner(".").add(packageName).add(f.getName()).toString();
                scans(pgName, f.getAbsolutePath(), classNames);
            }
        }
    }

    public static boolean mkdirsIfNotExists(String pathname) {
        File file = new File(pathname);
        if (!file.isDirectory()) {
            if (!file.mkdirs()) {
                System.err.println("fail to create directory: " + pathname);
                return false;
            }
        }
        return true;
    }

    public static void saveToFile(List<String> lines, String pathname) throws IOException {
        File file = new File(pathname);
        if (!file.isFile()) {
            if (!file.createNewFile()) {
                System.err.println("fail to create new file: " + file.getAbsolutePath());
                return;
            }
        }

        StringJoiner joiner = new StringJoiner("\n");
        lines.forEach(joiner::add);
        String content = joiner.toString();

        FileWriter fw = new FileWriter(file, false);
        BufferedWriter bw = new BufferedWriter(fw);
        bw.write(content);
        bw.flush();

        bw.close();
        fw.close();
    }
}
